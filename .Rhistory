points(lower95)
points(lower95)
plot()
plot(upper95)
points(lower95)
for (n in 1:1000) {
upper95[n] <- quantile(final_quercus_results[,,1],0.95)
lower95[n] <- quantile(final_quercus_results[,,1],0.05)
}
plot(upper95)
quantile(final_quercus_results[,,1],0.95)
quantile(final_quercus_results[,,1],0.05)
quantile(final_quercus_results[p,,1],0.95)
upper95[n] <- quantile(final_quercus_results[p,,1],0.95)
upper95
for (n in 1:1000) {
upper95[n] <- quantile(final_quercus_results[n,,1],0.95)
lower95[n] <- quantile(final_quercus_results[n,,1],0.05)
}
for (n in 1:1000) {
upper95[n] <- quantile(final_quercus_results[n,,1],0.95);
lower95[n] <- quantile(final_quercus_results[n,,1],0.05)
}
for (n in 1:1000) {
upper95[n] <- quantile(final_quercus_results[n,,1],0.95)
}
upper95 <- vector(length = 500)
lower95 <- vector(length = 500)
for (n in 1:500) {
upper95[n] <- quantile(final_quercus_results[n,,1],0.95)
}
plot(upper95)
line(upper95)
lines(upper95)
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e)
leg.txt1 = c("Total Mean Genetic Diversity");
legend(250, 0.7, legend = leg.txt1,
fill = c("black"))
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e)
leg.txt1 = c("Total Mean Genetic Diversity");
lines(lower95); legend(250, 0.7, legend = leg.txt1,
fill = c("black"))
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e)
leg.txt1 = c("Total Mean Genetic Diversity");
lines(lower95); legend(250, 0.7, legend = leg.txt1,
fill = c("black"))
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e)
leg.txt1 = c("Total Mean Genetic Diversity")
lines(upper95)
legend(250, 0.7, legend = leg.txt1,
fill = c("black"))
for (n in 1:500) {
upper95[n] <- quantile(final_quercus_results[n,,1],0.95)
lower95[n] <- quantile(final_quercus_results[n,,1],0.05)
}
plot(upper95)
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e)
leg.txt1 = c("Total Mean Genetic Diversity")
lines(upper95)
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e)
leg.txt1 = c("Total Mean Genetic Diversity")
lines(upper95, lwd = 2)
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e)
leg.txt1 = c("Total Mean Genetic Diversity")
lines(upper95, lwd = 2)
lines(lower95, lwd = 2)
legend(250, 0.7, legend = leg.txt1,
fill = c("black"))
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e)
leg.txt1 = c("Total Mean Genetic Diversity")
lines(upper95, col = "red",lwd = 2)
lines(lower95, col = "blue",lwd = 2)
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e)
leg.txt1 = c("Total Mean Genetic Diversity")
lines(upper95, col = "red",lwd = 2)
lines(lower95, col = "green",lwd = 2)
legend(250, 0.7, legend = leg.txt1,
fill = c("black"))
upper95
lower95
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e, ylim = c(0,1))
leg.txt1 = c("Total Mean Genetic Diversity")
lines(upper95, col = "red",lwd = 2)
lines(lower95, col = "green",lwd = 2)
legend(250, 0.7, legend = leg.txt1,
fill = c("black"))
mean(final_quercus_results[,,1])
?lines
leg.txt4 = c("Total Mean Genetic Diversity", "95% Upper Limit", "95% Lower Limit")
lines(upper95, col = "red",lwd = 2)
lines(lower95, col = "green",lwd = 2)
legend(250, 0.7, legend = leg.txt1,
fill = c("black"))
legend(250, 0.7, legend = leg.txt1,
fill = c("black", "red", "green"))
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e, ylim = c(0,1))
leg.txt4 = c("Total Mean Genetic Diversity", "95% Upper Limit", "95% Lower Limit")
lines(upper95, col = "red",lwd = 2)
lines(lower95, col = "green",lwd = 2)
legend(250, 0.7, legend = leg.txt1,
fill = c("black", "red", "green"))
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e, ylim = c(0,1))
leg.txt4 = c("Total Mean Genetic Diversity", "95% Upper Limit", "95% Lower Limit")
lines(upper95, col = "red",lwd = 2)
lines(lower95, col = "green",lwd = 2)
legend(250, 0.7, legend = leg.txt4,
fill = c("black", "red", "green"))
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e, ylim = c(0,1))
leg.txt4 = c("Total Mean Genetic Diversity", "95% Upper Limit", "95% Lower Limit")
lines(upper95, col = "red",lwd = 2, lty = 2)
lines(lower95, col = "green",lwd = 2, lty = 2)
legend(250, 0.7, legend = leg.txt4,
fill = c("black", "red", "green"))
?lwd
?lines
?lty
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e, ylim = c(0,1))
leg.txt4 = c("Total Mean Genetic Diversity", "95% Upper Limit", "95% Lower Limit")
lines(upper95, col = "red",lwd = 2, lty = "dotted")
lines(lower95, col = "green",lwd = 2, lty = "dotted")
legend(250, 0.7, legend = leg.txt4,
fill = c("black", "red", "green"))
lines(c(0,95))
lines(c(95, 0))
lines(h = 40)
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e, ylim = c(0,1))
leg.txt4 = c("Total Mean Genetic Diversity", "95% Upper Limit", "95% Lower Limit")
lines(upper95, col = "red",lwd = 2, lty = "dotted")
lines(lower95, col = "green",lwd = 2, lty = "dotted")
lines(h = 0,40)
legend(250, 0.7, legend = leg.txt4,
fill = c("black", "red", "green"))
abline(h = 40)
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e, ylim = c(0,1))
leg.txt4 = c("Total Mean Genetic Diversity", "95% Upper Limit", "95% Lower Limit")
lines(upper95, col = "red",lwd = 2, lty = "dotted")
lines(lower95, col = "green",lwd = 2, lty = "dotted")
abline(h = 40, col("black"))
abline(h = 0.95, col("black"))
abline(h = 0.95, col = "black")
# get the 95% CI of plot, but first go thru these ideas
# IDEA 1
# this gives us the position in the vector of the min genetic diversity value greater than 0.95
min(which(final_quercus_results[,1,sp]>0.95))
min(which(final_quercus_results[,,sp]>0.95))
final_quercus_results[,,1]
min(which(final_quercus_results[,,sp]>0.95))
final_quercus_results[1:69,,1]
which(min(mean(final_quercus_results[,,1]>0.95)))
min(which(mean(final_quercus_results[,,1]>0.95)))
min(which(mean(final_quercus_results[,,1]>0.95)))
min(which(mean(final_quercus_results[,,1])))>0.95
min(which(final_quercus_results))
# get the 95% CI of plot, but first go thru these ideas
# IDEA 1
# this gives us the position in the vector of the min genetic diversity value greater than 0.95
min(which(final_quercus_results[,1,sp]>0.95))
min(which(final_quercus_results[,1:500,sp]>0.95))
mean(final_quercus_results[1:500,,sp]>0.95)
min(mean(final_quercus_results[1:500,,sp]>0.95))
min(which((mean(final_quercus_results[1:500,,sp]>0.95)))
safg
min(which((mean(final_quercus_results[1:500,,sp]>0.95)))
f
min(which((mean(final_quercus_results[1:500,,sp]>0.95))))
abline(v = 69, h = 0.95, col = "black")
abline(v = 69, h = 0.95)
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e, ylim = c(0,1))
leg.txt4 = c("Total Mean Genetic Diversity", "95% Upper Limit", "95% Lower Limit")
lines(upper95, col = "red",lwd = 2, lty = "dotted")
lines(lower95, col = "green",lwd = 2, lty = "dotted")
abline(v = 69, h = 0.95)
legend(250, 0.7, legend = leg.txt4,
fill = c("black", "red", "green"))
# distribution of 95% min sample sizes across replicates for species one
# not what we quite want however...
plot(xlab = "Replicate number", ylab = "95% minimum sample size", min_samp95)
min_samp95
min_samp95
# get the 95% CI of plot, but first go thru these ideas
# IDEA 1
# this gives us the position in the vector of the min genetic diversity value greater than 0.95
min(which(final_quercus_results[,1,sp]>0.95))
min(which(final_quercus_results[,,sp]>0.95))
final_quercus_results[,,sp]>0.95
# this shows the genetic diversity value in 95 percentile of the values across the replicates for a sample size of one for species one
quantile(final_quercus_results[,,1],0.95)
# this shows the genetic diversity value in 95 percentile of the values across the replicates for a sample size of one for species one
quantile(final_quercus_results[,,1],0.95)
p
# this shows the genetic diversity value in 95 percentile of the values across the replicates for a sample size of one for species one
quantile(final_quercus_results[p,,1],0.95)
which(final_quercus_results[,,sp]>0.95
which(final_quercus_results[,,sp]>0.95)
which(final_quercus_results[,,sp]>0.95)
which(final_quercus_results[,,sp]>0.95)
which(final_quercus_results[,,sp]<0.95)
which(final_quercus_results[,,sp]>0.95)
# get the 95% CI of plot, but first go thru these ideas
# IDEA 1
# this gives us the position in the vector of the min genetic diversity value greater than 0.95
min(which(final_quercus_results[,1,sp]>0.95))
sp<-1; min_samp95<-vector(length = 1000)
for (r in 1:1000) {
min_samp95[r]<-min(which(final_quercus_results[,r,sp]>0.95))
}
min_samp95
min(min_samp95)
which(min(min_samp95))
min(which(min_samp95))
min(min_samp95)
which.min(min_samp95)
min.which(min_samp95)
which.min(min_samp95)
min(min_samp95)
min_samp95
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e, ylim = c(0,1))
leg.txt4 = c("Total Mean Genetic Diversity", "95% Upper Limit", "95% Lower Limit")
lines(upper95, col = "red",lwd = 2, lty = "dotted")
lines(lower95, col = "green",lwd = 2, lty = "dotted")
abline(h = 0.95)
legend(250, 0.7, legend = leg.txt4,
fill = c("black", "red", "green"))
which.min(min_samp95)
min(min_samp95)
min_samp95
abline(v = 35)
min_samp95
which.min(min_samp95
which.min(min_samp95)
which.min(min_samp95)
min(min_samp95)
final_quercus_results[,1,1]
final_quercus_results[1,,1]
mean(final_quercus_results[1,,1])
# add the lines to the legend, add an asymptote of 0.95 horizontal, and add the line at which sample size reaches the 0.95 benchmark vertically
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e, ylim = c(0,1))
leg.txt4 = c("Total Mean Genetic Diversity", "95% Upper Limit", "95% Lower Limit")
lines(upper95, col = "red",lwd = 2, lty = "dotted")
lines(lower95, col = "green",lwd = 2, lty = "dotted")
abline(h = 0.95, lty = "dotted")
legend(250, 0.7, legend = leg.txt4,
fill = c("black", "red", "green")
# add the lines to the legend, add an asymptote of 0.95 horizontal, and add the line at which sample size reaches the 0.95 benchmark vertically
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e, ylim = c(0,1))
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e, ylim = c(0,1))
leg.txt4 = c("Total Mean Genetic Diversity", "95% Upper Limit", "95% Lower Limit")
lines(upper95, col = "red",lwd = 2, lty = "dotted")
lines(lower95, col = "green",lwd = 2, lty = "dotted")
abline(h = 0.95, lty = "dotted")
legend(250, 0.7, legend = leg.txt4,
fill = c("black", "red", "green"))
# add the lines to the legend, add an asymptote of 0.95 horizontal, and add the line at which sample size reaches the 0.95 benchmark vertically
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e, ylim = c(0,1))
leg.txt4 = c("Total Mean Genetic Diversity", "95% Upper Limit", "95% Lower Limit")
lines(upper95, col = "red",lwd = 2, lty = "dashed")
lines(lower95, col = "green",lwd = 2, lty = "dashed")
abline(h = 0.95, lty = "dotted")
legend(250, 0.7, legend = leg.txt4,
fill = c("black", "red", "green"))
which.min(min_samp95)
min_samp95
mean(min_samp95)
for (r in 1:1000) {
min_samp95[r]<-min(which(final_quercus_results[,r,sp]>0.95))
}
min_samp95
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e, ylim = c(0,1))
leg.txt4 = c("Total Mean Genetic Diversity", "95% Upper Limit", "95% Lower Limit")
lines(upper95, col = "red",lwd = 2, lty = "dashed")
lines(lower95, col = "green",lwd = 2, lty = "dashed")
abline(h = 0.95, lty = "dotted")
legend(250, 0.7, legend = leg.txt4,
fill = c("black", "red", "green"))
which.min(min_samp95)
min(min_samp95)
min_samp95
abline(v = 35)
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e, ylim = c(0,1))
leg.txt4 = c("Total Mean Genetic Diversity", "95% Upper Limit", "95% Lower Limit")
lines(upper95, col = "red",lwd = 2, lty = "dashed")
lines(lower95, col = "green",lwd = 2, lty = "dashed")
abline(h = 0.95, lty = "dotted")
legend(250, 0.7, legend = leg.txt4,
fill = c("black", "red", "green"))
which.min(min_samp95)
min(min_samp95)
min_samp95
abline(v = 35, lty = "dashed")
# add the lines to the legend, add an asymptote of 0.95 horizontal, and add the line at which sample size reaches the 0.95 benchmark vertically
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e, ylim = c(0,1))
leg.txt4 = c("Total Mean Genetic Diversity", "95% Upper Limit", "95% Lower Limit")
lines(upper95, col = "red",lwd = 2, lty = "dashed")
lines(lower95, col = "green",lwd = 2, lty = "dashed")
abline(h = 0.95, lty = "dotted")
legend(250, 0.7, legend = leg.txt4,
fill = c("black", "red", "green"))
which.min(min_samp95)
min(min_samp95)
min_samp95
abline(v = 35, lty = "dotted")
mean(min_samp95)
abline(v = mean(min_samp95), lty ="dotted")
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e, ylim = c(0,1))
leg.txt4 = c("Total Mean Genetic Diversity", "95% Upper Limit", "95% Lower Limit")
lines(upper95, col = "red",lwd = 2, lty = "dashed")
lines(lower95, col = "green",lwd = 2, lty = "dashed")
abline(h = 0.95, lty = "dotted")
legend(250, 0.7, legend = leg.txt4,
fill = c("black", "red", "green"))
which.min(min_samp95)
min(min_samp95)
min_samp95
abline(v = mean(min_samp95), lty ="dotted")
mean(min_samp95) > 0.95
for(a in 1:nrow(final_quercus_results)){
mean95 <- which(mean(final_quercus_results[a,,1] > 0.95))
}
for(a in 1:nrow(final_quercus_results)){
mean95 <- which(mean(final_quercus_results[a,,1]) > 0.95)
}
mean95
final_quercus_results[,,1]
mean95 <- list()
for(a in 1:nrow(final_quercus_results)){
mean95[[a]] <- mean(final_quercus_results[,a,1])
}
mean95 > 0.95
for(a in 1:nrow(final_quercus_results)){
mean95[[a]] <- mean(final_quercus_results[a,,1])
}
mean95 > 0.95
which(mean95 > 0.95)
# add the lines to the legend, add an asymptote of 0.95 horizontal, and add the line at which sample size reaches the 0.95 benchmark vertically
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e, ylim = c(0,1))
leg.txt4 = c("Total Mean Genetic Diversity", "95% Upper Limit", "95% Lower Limit")
lines(upper95, col = "red",lwd = 2, lty = "dashed")
lines(lower95, col = "green",lwd = 2, lty = "dashed")
abline(h = 0.95, lty = "dotted")
legend(250, 0.7, legend = leg.txt4,
fill = c("black", "red", "green"))
which.min(min_samp95)
min(min_samp95)
min_samp95
abline(v = 191, lty = "dotted")
abline(v = mean(min_samp95) > 0.95, lty ="dotted", color = "blue")
abline(v = 191, lty = "dotted", color = "blue")
abline(v = 191, lty = "dotted", col = "blue")
abline(h = 0.95, lty = "dotted", , color = "blue")
abline(h = 0.95, lty = "dotted", col = "blue")
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e, ylim = c(0,1))
leg.txt4 = c("Total Mean Genetic Diversity", "95% Upper Limit", "95% Lower Limit")
lines(upper95, col = "red",lwd = 2, lty = "dashed")
lines(lower95, col = "green",lwd = 2, lty = "dashed")
abline(h = 0.95, lty = "dotted", col = "yellow")
legend(250, 0.7, legend = leg.txt4,
fill = c("black", "red", "green"))
which.min(min_samp95)
min(min_samp95)
min_samp95
abline(v = 191, lty = "dotted", col = "yellow")
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e, ylim = c(0,1))
leg.txt4 = c("Total Mean Genetic Diversity", "95% Upper Limit", "95% Lower Limit")
lines(upper95, col = "red",lwd = 2, lty = "dashed")
lines(lower95, col = "green",lwd = 2, lty = "dashed")
abline(h = 0.95, lty = "dotted", col = "orange")
legend(250, 0.7, legend = leg.txt4,
fill = c("black", "red", "green"))
which.min(min_samp95)
min(min_samp95)
min_samp95
abline(v = 191, lty = "dotted", col = "orange")
# distribution of 95% min sample sizes across replicates for species one
# not what we quite want however...
plot(xlab = "Replicate number", ylab = "95% minimum sample size", min_samp95)
leg.txt3 <- "Sample size"
legend(650, 250, legend = leg.txt3,
fill = c("black"))
# get the 95% CI of plot, but first go thru these ideas
# IDEA 1
# this gives us the position in the vector of the min genetic diversity value greater than 0.95
min(which(final_quercus_results[,1,sp]>0.95))
sp<-1; min_samp95<-vector(length = 1000)
for (r in 1:1000) {
min_samp95[r]<-min(which(final_quercus_results[,r,sp]>0.95))
}
min_samp95
# distribution of 95% min sample sizes across replicates for species one
# not what we quite want however...
plot(xlab = "Replicate number", ylab = "95% minimum sample size", min_samp95)
leg.txt3 <- "Sample size"
legend(650, 250, legend = leg.txt3,
fill = c("black"))
upper95 <- vector(length = 500)
lower95 <- vector(length = 500)
for (n in 1:500) {
upper95[n] <- quantile(final_quercus_results[n,,1],0.95)
lower95[n] <- quantile(final_quercus_results[n,,1],0.05)
}
# add the lines to the legend, add an asymptote of 0.95 horizontal, and add the line at which sample size reaches the 0.95 benchmark vertically
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e, ylim = c(0,1))
leg.txt4 = c("Total Mean Genetic Diversity", "95% Upper Limit", "95% Lower Limit")
lines(upper95, col = "red",lwd = 2, lty = "dashed")
lines(lower95, col = "green",lwd = 2, lty = "dashed")
abline(h = 0.95, lty = "dotted", col = "orange")
legend(250, 0.7, legend = leg.txt4,
fill = c("black", "red", "green"))
which.min(min_samp95)
min(min_samp95)
min_samp95
abline(v = 191, lty = "dotted", col = "orange")
# add the lines to the legend, add an asymptote of 0.95 horizontal, and add the line at which sample size reaches the 0.95 benchmark vertically
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e, ylim = c(0,1))
leg.txt4 = c("Total Mean Genetic Diversity", "95% Upper Limit", "95% Lower Limit")
lines(upper95, col = "red",lwd = 2, lty = "dashed")
lines(lower95, col = "green",lwd = 2, lty = "dashed")
abline(h = 0.95, lty = "dotted", col = "orange")
legend(250, 0.7, legend = leg.txt4,
fill = c("black", "red", "green"))
which.min(min_samp95)
min(min_samp95)
min_samp95
which.min(min_samp95)
min(min_samp95)
min_samp95
for(a in 1:nrow(final_quercus_results)){
mean95[[a]] <- mean(final_quercus_results[a,,1])
}
abline(v = 191, lty = "dotted", col = "orange")
mean(min_samp95) > 0.95
abline(v = mean(min_samp95) > 0.95, lty ="dotted")
which.min(min_samp95)
min(min_samp95)
min_samp95
abline(v = min(min_samp95) > 0.95, lty ="dotted")
# add the lines to the legend, add an asymptote of 0.95 horizontal, and add the line at which sample size reaches the 0.95 benchmark vertically
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e, ylim = c(0,1))
abline(v = min(min_samp95) > 0.95, lty ="dotted")
abline(v = min(min_samp95), lty ="dotted")
abline(v = min(min_samp95), lty ="dotted")
# add the lines to the legend, add an asymptote of 0.95 horizontal, and add the line at which sample size reaches the 0.95 benchmark vertically
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e, ylim = c(0,1))
leg.txt4 = c("Total Mean Genetic Diversity", "95% Upper Limit", "95% Lower Limit")
lines(upper95, col = "red",lwd = 2, lty = "dashed")
lines(lower95, col = "green",lwd = 2, lty = "dashed")
abline(h = 0.95, lty = "dotted", col = "orange")
legend(250, 0.7, legend = leg.txt4,
fill = c("black", "red", "green"))
abline(v = min(min_samp95), lty ="dotted", col = "orange")
abline(v = mean(min_samp95), lty ="dotted", col = "orange")
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e, ylim = c(0,1))
leg.txt4 = c("Total Mean Genetic Diversity", "95% Upper Limit", "95% Lower Limit")
lines(upper95, col = "red",lwd = 2, lty = "dashed")
lines(lower95, col = "green",lwd = 2, lty = "dashed")
abline(h = 0.95, lty = "dotted", col = "orange")
legend(250, 0.7, legend = leg.txt4,
fill = c("black", "red", "green"))
abline(v = mean(min_samp95), lty ="dotted", col = "orange")
which.min(min_samp95)
min(min_samp95)
mean(min_samp95)
mean95 <- list()
# add the lines to the legend, add an asymptote of 0.95 horizontal, and add the line at which sample size reaches the 0.95 benchmark vertically
plot(xlab = "Sample Size", ylab = "Genetic Diversity", e, ylim = c(0,1))
leg.txt4 = c("Total Mean Genetic Diversity", "95% Upper Limit", "95% Lower Limit")
lines(upper95, col = "red",lwd = 2, lty = "dashed")
lines(lower95, col = "green",lwd = 2, lty = "dashed")
abline(h = 0.95, lty = "dotted", col = "orange")
legend(250, 0.7, legend = leg.txt4,
fill = c("black", "red", "green"))
for(a in 1:nrow(final_quercus_results)){
mean95[[a]] <- mean(final_quercus_results[a,,1])
}
mean95
abline(v = 191, lty = "dotted", col = "orange")
for(a in 1:nrow(final_quercus_results)){
mean95[[a]] <- mean(final_quercus_results[a,,1])
}
which.min(mean95)
which.min(mean95)>95
which(mean95)>.95
mean95
mean95 <- list()
mean95
mean95
for(a in 1:nrow(final_quercus_results)){
mean95[[a]] <- mean(final_quercus_results[a,,1])
}
mean95
min(mean95)
min("mean95")
plot(mean95)
which(mean95)>0.95
which.main(mean95)>0.95
which.min(mean95)>0.95
for(a in 1:nrow(final_quercus_results)){
mean95[[a]] <- mean(final_quercus_results[a,,1])
}
min(mean95[1])>95
min(mean95[,2])
min(mean95[1])
min(mean95)
min(mean95)
unlist(mean95)
min(mean95)
for(a in 1:nrow(final_quercus_results)){
mean95[[a]] <- mean(final_quercus_results[a,,1])
}
unlist(mean95)
min(mean95)>0.95
min(mean95)
mean95
